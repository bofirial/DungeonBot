# This is a basic workflow to help you get started with Actions

name: ASP.NET Core

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.0.x"

      - name: DotNet Test
        run: dotnet test ./DungeonBotGame.Tests/DungeonBotGame.Tests.csproj -c Release -r win-x86

      - name: DotNet Pack
        if: github.ref == 'refs/heads/main'
        run: dotnet pack ./DungeonBotGame.SourceGenerators/DungeonBotGame.SourceGenerators.csproj -c Release -o packages

      - name: DotNet Pack
        if: github.ref == 'refs/heads/main'
        run: dotnet pack ./DungeonBotGame/DungeonBotGame.csproj -c Release -o packages

      - name: DotNet NuGet Push
        if: github.ref == 'refs/heads/main'
        working-directory: ./packages
        run: dotnet nuget push "*.nupkg" --skip-duplicate -k ${{secrets.NUGET_PASSWORD}} -s https://api.nuget.org/v3/index.json

      - name: DotNet Publish
        if: github.ref == 'refs/heads/main'
        run: dotnet publish ./DungeonBotGame.Web/DungeonBotGame.Web.csproj -c Release --no-self-contained -r win-x86 -o publish

      - name: Azure WebApp
        if: github.ref == 'refs/heads/main'
        uses: Azure/webapps-deploy@v2
        with:
          publish-profile: ${{secrets.SCM_CREDENTIALS}}
          app-name: DungeonBot-Web
          package: publish
