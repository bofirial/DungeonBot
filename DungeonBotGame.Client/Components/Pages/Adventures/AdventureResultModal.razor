@using DungeonBotGame.Models.ViewModels

@inject IJSRuntime JSRuntime

<div class="modal fade" id="adventureResultModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="modalTitle">@(AdventureResult?.Success == true ? "Victory" : "Defeat")</h3>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                @if (AdventureResult != null)
                {
                    var encounterNumber = 1;

                    <h4 class="m-2">Encounters</h4>

                    <div class="accordion" id="encountersAccordion">

                        @foreach (var encounterResult in AdventureResult.EncounterResults)
                        {
                            var encounterCollapseHeading = $"EncounterAccordionHeading-{encounterNumber}";
                            var encounterCollapseId = $"EncounterAccordionCollapseId-{encounterNumber}";
                            var combatLogAccordionId = $"CombatLogAccordionId-{encounterNumber}";

                            <div class="card">
                                <div class="card-header p-0" id="@encounterCollapseHeading">
                                    <h2 class="mb-0">
                                        <button class="btn btn-light btn-block text-left p-3 rounded-0" type="button" data-toggle="collapse" data-target="#@encounterCollapseId" aria-expanded="@(encounterNumber == 1 ? "true" : "false")" aria-controls="@encounterCollapseId">
                                            @encounterResult.ResultDisplayText @*TODO: Encounter Name*@
                                        </button>
                                    </h2>
                                </div>

                                <div id="@encounterCollapseId" class="collapse @(encounterNumber == 1 ? "show" : string.Empty) m-3" aria-labelledby="@encounterCollapseHeading" data-parent="#encountersAccordion">

                                    <div class="accordion" id="@combatLogAccordionId">
                                        @foreach (var encounterRoundResult in encounterResult.EncounterRoundResults)
                                        {
                                            var encounterRoundCollapseId = $"adventureResultAccordionCollapse{encounterRoundResult.Round}";
                                            var encounterRoundCollapseHeading = $"adventureResultAccordionCollapseHeading{encounterRoundResult.Round}";

                                            <div class="card">
                                                <div class="card-header p-0" id="@encounterRoundCollapseHeading">
                                                    <h2 class="mb-0">
                                                        <button class="btn btn-light btn-block text-left p-3 rounded-0" type="button" data-toggle="collapse" data-target="#@encounterRoundCollapseId" aria-expanded="false" aria-controls="@encounterRoundCollapseId">
                                                            Round <span class="badge bg-primary rounded-pill">@encounterRoundResult.Round</span> - DungeonBotGame Health <span class="badge bg-success rounded-pill">@encounterRoundResult.DungeonBotCurrentHealth</span> - @EnemyName Health <span class="badge bg-danger rounded-pill">@encounterRoundResult.EnemyCurrentHealth</span>
                                                        </button>
                                                    </h2>
                                                </div>

                                                <div id="@encounterRoundCollapseId" class="collapse" aria-labelledby="@encounterRoundCollapseHeading" data-parent="#@combatLogAccordionId">
                                                    <ul class="list-group list-group-flush">

                                                        @foreach (var actionResult in encounterRoundResult.ActionResults)
                                                        {
                                                            <li class="list-group-item">@actionResult.DisplayText</li>
                                                        }
                                                    </ul>
                                                </div>
                                            </div>
                                        }
                                    </div>

                                    <div class="alert @(encounterResult.Success ? "alert-success" : "alert-danger") m-3" role="alert">
                                        @encounterResult.ResultDisplayText
                                    </div>
                                </div>
                            </div>
                            encounterNumber++;
                        }
                    </div>
                }

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public AdventureResultViewModel? AdventureResult { get; set; }

    [Parameter]
    public string EnemyName { get; set; } = string.Empty;

    public async Task ShowModalAsync()
    {
        await JSRuntime.InvokeVoidAsync("launchModal", "adventureResultModal");
    }
}